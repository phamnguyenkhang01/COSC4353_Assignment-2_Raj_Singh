{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phamn\\\\Desktop\\\\Khang\\\\Spring 2022\\\\Software\\\\fuel-quote\\\\fuel-quote\\\\front-end\\\\src\\\\components\\\\Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport AuthService from \"../services/AuthService\";\nimport \"../style/Signup.css\";\nimport signUpimg from '../img/flame-1208.png';\nimport Header from \"./header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Signup() {\n  _s();\n\n  var [loading, setLoading] = useState(false);\n\n  var enableSpinner = () => {\n    loading = true;\n    setLoading(loading);\n  };\n\n  var disableSpinner = () => {\n    loading = false;\n    setLoading(loading);\n  };\n\n  var error = '';\n  var [formdata, setFormData] = useState({\n    \"email\": '',\n    \"password\": '',\n    \"confirm_password\": ''\n  });\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    switch (name) {\n      case \"email\":\n        formdata.email = value;\n        break;\n\n      case \"password\":\n        formdata.password = value;\n        break;\n\n      case \"confirm_password\":\n        formdata.confirm_password = value;\n        break;\n\n      default:\n        console.log(\"invalid\");\n    }\n\n    setFormData(formdata);\n  };\n\n  const submitRegisterForm = e => {\n    e.preventDefault();\n    const emailValidation = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    let validatedEmail = emailValidation.test(String(formdata.email).toLowerCase());\n\n    if (formdata.email && validatedEmail && formdata && formdata.password && formdata.confirm_password) {\n      enableSpinner();\n      AuthService.Register(formdata).then(res => {\n        let _data = res.data;\n        console.log(_data);\n        localStorage.setItem('accessToken', _data.accessToken);\n        localStorage.setItem('loggedInUser', JSON.stringify(res.data.user));\n        disableSpinner();\n        window.location.reload();\n      }).catch(err => {\n        disableSpinner();\n        NotificationManager.error('Error message', err.response.data.message);\n      });\n    }\n\n    error = '';\n\n    if (!formdata.email) {\n      error = \"Email can not be blank\";\n      NotificationManager.error('Error message', 'Email can not be blank');\n    } else {\n      if (!validatedEmail) {\n        error = \"Email address can not be blank\";\n        NotificationManager.error('Error message', 'Please enter a validate email address');\n      }\n    }\n\n    if (!formdata.password) {\n      error = \"Password can not be blank\";\n      NotificationManager.error('Error message', 'Password can not be blank');\n    }\n\n    if (formdata.password !== formdata.confirm_password) {\n      NotificationManager.error('Error message', 'The password and confirmation password do not match');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cv-spinner\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center main_container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"innerContainer row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 d-flex flex-column justify-content-center align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Signup\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: submitRegisterForm,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                className: \"form-label\",\n                children: \"Email address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                className: \"form-control\",\n                id: \"email\",\n                name: \"email\",\n                placeholder: \"name@example.com\",\n                required: true,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                className: \"form-label\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"form-control\",\n                id: \"password\",\n                name: \"password\",\n                placeholder: \"********\",\n                minLength: 8,\n                required: true,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"confirm_password\",\n                className: \"form-label\",\n                children: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"form-control\",\n                id: \"confirm_password\",\n                name: \"confirm_password\",\n                placeholder: \"********\",\n                minLength: 8,\n                required: true,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-primary\",\n                onClick: submitRegisterForm,\n                children: \"Signup\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 d-flex flex-column justify-content-center align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: signUpimg,\n              alt: \"SignupImage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"link\",\n            children: [\"Already have account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"link_\",\n              href: \"/login\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotificationContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Signup, \"6F1eVGWv+qS0VVCHaXq5WOT+9nU=\");\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["C:/Users/phamn/Desktop/Khang/Spring 2022/Software/fuel-quote/fuel-quote/front-end/src/components/Signup.js"],"names":["React","useState","NotificationContainer","NotificationManager","AuthService","signUpimg","Header","Signup","loading","setLoading","enableSpinner","disableSpinner","error","formdata","setFormData","handleInputChange","e","name","value","target","email","password","confirm_password","console","log","submitRegisterForm","preventDefault","emailValidation","validatedEmail","test","String","toLowerCase","Register","then","res","_data","data","localStorage","setItem","accessToken","JSON","stringify","user","window","location","reload","catch","err","response","message"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport AuthService from \"../services/AuthService\";\r\n\r\nimport \"../style/Signup.css\";\r\nimport signUpimg from '../img/flame-1208.png';\r\nimport Header from \"./header\";\r\n\r\nfunction Signup() {\r\n  var [loading, setLoading] = useState(false);\r\n\r\n  var enableSpinner = () => {\r\n      loading = true;\r\n      setLoading(loading) ;\r\n  }\r\n  \r\n  var disableSpinner = () => {\r\n      loading = false;\r\n      setLoading(loading) ;\r\n  }\r\n  \r\n  var error = '';\r\n  var [formdata, setFormData] = useState({\r\n      \"email\": '',\r\n      \"password\": '',\r\n      \"confirm_password\": '',\r\n  });\r\n  \r\n  const handleInputChange = e => {\r\n\t\tconst { name, value } = e.target;\r\n        switch(name){\r\n            case \"email\":\r\n                formdata.email = value;\r\n                break;\r\n            case \"password\":\r\n                formdata.password = value;\r\n                break;\r\n            case \"confirm_password\":\r\n                formdata.confirm_password = value;\r\n                break;\r\n            default:\r\n                console.log(\"invalid\");\r\n        }\r\n        setFormData(formdata) ;\r\n\t};\r\n\r\n  const submitRegisterForm = (e) =>{\r\n      e.preventDefault();\r\n\r\n      const emailValidation = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      let validatedEmail = emailValidation.test(String(formdata.email).toLowerCase());\r\n\r\n      if(formdata.email && validatedEmail && formdata && formdata.password && formdata.confirm_password){\r\n          enableSpinner();\r\n          AuthService.Register(formdata)\r\n          .then((res) => {\r\n              let _data = res.data;\r\n              console.log(_data);\r\n              localStorage.setItem('accessToken', _data.accessToken)\r\n              localStorage.setItem('loggedInUser',JSON.stringify(res.data.user));\r\n\r\n              disableSpinner();\r\n              window.location.reload();\r\n          })\r\n          .catch((err) => {\r\n              disableSpinner();\r\n              NotificationManager.error('Error message', err.response.data.message);\r\n          })\r\n      }\r\n      error = '';\r\n\r\n      if(!formdata.email){\r\n          error = \"Email can not be blank\";\r\n          NotificationManager.error('Error message', 'Email can not be blank');\r\n      }else{\r\n\t\t\t\tif(!validatedEmail){\r\n\t\t\t\t\terror = \"Email address can not be blank\";\r\n\t\t\t\t\tNotificationManager.error('Error message', 'Please enter a validate email address');\r\n\t\t\t\t}\r\n\t\t\t}\r\n      \r\n      if(!formdata.password){\r\n          error = \"Password can not be blank\";\r\n          NotificationManager.error('Error message', 'Password can not be blank');\r\n      }\r\n\r\n      if(formdata.password !== formdata.confirm_password){\r\n\t\t\t\tNotificationManager.error('Error message', 'The password and confirmation password do not match');\r\n      }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <Header/>\r\n      {loading ? (\r\n          <div id=\"overlay\">\r\n              <div className=\"cv-spinner\">\r\n                  <span className=\"spinner\"></span>\r\n              </div>\r\n          </div>\r\n      ) : (\r\n          <span></span>\r\n      )}\r\n      <div className=\"d-flex justify-content-center align-items-center main_container\">\r\n        <div className=\"innerContainer row\">\r\n          <div className=\"col-6 d-flex flex-column justify-content-center align-items-center\">\r\n            <div>\r\n              <h1>Signup</h1>\r\n              <form onSubmit={submitRegisterForm}>\r\n                <label htmlFor=\"email\" className=\"form-label\">\r\n                  Email address\r\n                </label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  placeholder=\"name@example.com\"\r\n                  required\r\n                  onChange={handleInputChange}\r\n                />\r\n                <label htmlFor=\"password\" className=\"form-label\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  placeholder=\"********\"\r\n                  minLength={8}\r\n                  required\r\n                  onChange={handleInputChange}\r\n                />\r\n                <label htmlFor=\"confirm_password\" className=\"form-label\">\r\n                  Confirm Password\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"confirm_password\"\r\n                  name=\"confirm_password\"\r\n                  placeholder=\"********\"\r\n                  minLength={8}\r\n                  required\r\n                  onChange={handleInputChange}\r\n                />\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={submitRegisterForm}>\r\n                  Signup\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-6 d-flex flex-column justify-content-center align-items-center\">\r\n            <div>\r\n              <img src={ signUpimg } alt=\"SignupImage\"></img>\r\n            </div>\r\n            <div className=\"link\">\r\n              Already have account? <a className=\"link_\" href=\"/login\">\r\n                Login\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <NotificationContainer/>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}