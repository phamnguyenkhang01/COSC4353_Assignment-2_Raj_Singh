{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elija\\\\GithubRepo\\\\Software_Assignment\\\\COSC4353_Assignment-2_Raj_Singh\\\\front-end\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport Header from \"./header\";\nimport '../style/Login.css';\nimport loginImg from '../img/login_illust.png';\nimport facebook from '../img/facebook.png';\nimport microsoft from '../img/microsoft.png';\nimport google from '../img/google.png';\nimport AuthService from \"../services/AuthService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  var [loading, setLoading] = useState(false);\n\n  var enableSpinner = () => {\n    loading = true;\n    setLoading(loading);\n  };\n\n  var disableSpinner = () => {\n    loading = false;\n    setLoading(loading);\n  };\n\n  var error = '';\n  var [formdata, setFormData] = useState({\n    \"email\": '',\n    \"password\": ''\n  });\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    switch (name) {\n      case \"email\":\n        formdata.email = value;\n        break;\n\n      case \"password\":\n        formdata.password = value;\n        break;\n\n      default:\n        console.log(\"invalid\");\n    }\n\n    setFormData(formdata);\n  };\n\n  const submitLoginForm = e => {\n    e.preventDefault();\n\n    if (formdata.email && formdata.password) {\n      enableSpinner();\n      AuthService.login(formdata).then(res => {\n        let _data = res.data;\n        console.log(_data);\n        localStorage.setItem('accessToken', _data.accessToken);\n        localStorage.setItem('loggedInUser', JSON.stringify(res.data.user));\n        disableSpinner();\n        window.location.reload();\n      }).catch(err => {\n        disableSpinner();\n        NotificationManager.error('Error message', err.response.data.message);\n      });\n    }\n\n    error = '';\n\n    if (!formdata.email) {\n      error = \"Email address can not be blank\";\n      NotificationManager.error('Error message', 'Email address can not be blank');\n      console.log(error);\n    }\n\n    if (!formdata.password) {\n      error = \"Password can not be blank\";\n      NotificationManager.error('Error message', 'Password can not be blank');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cv-spinner\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center main_container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"innerContainer row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 d-flex flex-column justify-content-center align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: loginImg,\n              alt: \"LoginImage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"link\",\n            children: [\"Don't have any account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"link_\",\n              href: \"http://localhost:3000/sign-up\",\n              children: \"Create an account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 d-flex flex-column justify-content-center align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              id: \"loginForm\",\n              onSubmit: submitLoginForm,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                className: \"form-label\",\n                children: \"Email address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                id: \"email\",\n                className: \"form-control\",\n                placeholder: \"name@example.com\",\n                name: \"email\",\n                required: true,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this), error ? /*#__PURE__*/_jsxDEV(\"span\", {\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 27\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 50\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                className: \"form-label\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                id: \"password\",\n                className: \"form-control\",\n                placeholder: \"********\",\n                name: \"password\",\n                minLength: 8,\n                required: true,\n                onChange: handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"checkBox\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-check-input\",\n                  type: \"checkbox\",\n                  value: \"\",\n                  id: \"flexCheckDefault\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-label\",\n                  htmlFor: \"flexCheckDefault\",\n                  children: \"Remember me\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-primary\",\n                onClick: submitLoginForm,\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotificationContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"jf8pb4dbVMm5mTWZTsXUCcwz4uM=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/elija/GithubRepo/Software_Assignment/COSC4353_Assignment-2_Raj_Singh/front-end/src/components/Login.js"],"names":["React","useState","NotificationContainer","NotificationManager","Header","loginImg","facebook","microsoft","google","AuthService","Login","loading","setLoading","enableSpinner","disableSpinner","error","formdata","setFormData","handleInputChange","e","name","value","target","email","password","console","log","submitLoginForm","preventDefault","login","then","res","_data","data","localStorage","setItem","accessToken","JSON","stringify","user","window","location","reload","catch","err","response","message"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport Header from \"./header\";\r\n\r\nimport '../style/Login.css';\r\nimport loginImg from '../img/login_illust.png';\r\nimport facebook from '../img/facebook.png';\r\nimport microsoft from '../img/microsoft.png';\r\nimport google from '../img/google.png';\r\n\r\nimport AuthService from \"../services/AuthService\";\r\n\r\nfunction Login() {\r\n  var [loading, setLoading] = useState(false);\r\n\r\n  var enableSpinner = () => {\r\n      loading = true;\r\n      setLoading(loading) ;\r\n  }\r\n  \r\n  var disableSpinner = () => {\r\n      loading = false;\r\n      setLoading(loading) ;\r\n  }\r\n\r\n  var error = '';\r\n  var [formdata, setFormData] = useState({\r\n    \"email\": '',\r\n    \"password\": ''\r\n  });\r\n\r\n  const handleInputChange = e => {\r\n\t\tconst { name, value } = e.target;\r\n        switch(name){\r\n            case \"email\":\r\n                formdata.email = value;\r\n                break;\r\n            case \"password\":\r\n                formdata.password = value;\r\n                break;\r\n            default:\r\n                console.log(\"invalid\");\r\n        }\r\n        setFormData(formdata) ;\r\n\t};\r\n\r\n  const submitLoginForm = (e) =>{\r\n    e.preventDefault();\r\n    \r\n    if(formdata.email && formdata.password){\r\n        enableSpinner();\r\n        AuthService.login(formdata)\r\n        .then((res) => {\r\n            let _data = res.data;\r\n            console.log(_data);\r\n            localStorage.setItem('accessToken', _data.accessToken)\r\n            localStorage.setItem('loggedInUser',JSON.stringify(res.data.user));\r\n            disableSpinner();\r\n            \r\n            window.location.reload();\r\n        })\r\n        .catch((err) => {\r\n            disableSpinner();\r\n            NotificationManager.error('Error message', err.response.data.message);\r\n        })\r\n    }\r\n    error = '';\r\n\r\n    if(!formdata.email){\r\n        error = \"Email address can not be blank\";\r\n        NotificationManager.error('Error message', 'Email address can not be blank');\r\n        console.log(error);\r\n    }\r\n    \r\n    if(!formdata.password){\r\n        error = \"Password can not be blank\";\r\n        NotificationManager.error('Error message', 'Password can not be blank');\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n        <Header/>\r\n\r\n      {loading ? (\r\n          <div id=\"overlay\">\r\n              <div className=\"cv-spinner\">\r\n                  <span className=\"spinner\"></span>\r\n              </div>\r\n          </div>\r\n      ) : (\r\n          <span></span>\r\n      )}\r\n      <div className=\"d-flex justify-content-center align-items-center main_container\">\r\n        <div className=\"innerContainer row\">\r\n          <div className=\"col-6 d-flex flex-column justify-content-center align-items-center\">\r\n            <div>\r\n              <img src={ loginImg } alt=\"LoginImage\" />\r\n            </div>\r\n            <div className=\"link\">\r\n              Don't have any account? <a className=\"link_\" href=\"http://localhost:3000/sign-up\">\r\n                Create an account\r\n              </a>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-6 d-flex flex-column justify-content-center align-items-center\">\r\n            <div>\r\n              <h1>Login</h1>\r\n              <form id=\"loginForm\" onSubmit={submitLoginForm}>\r\n                <label htmlFor=\"email\" className=\"form-label\">\r\n                  Email address\r\n                </label>\r\n                <input\r\n                  type=\"email\" id=\"email\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"name@example.com\"\r\n                  name='email'\r\n                  required\r\n                  onChange={handleInputChange} \r\n                />\r\n                { error? (<span>{error}</span>):(<span></span>) }\r\n                <label htmlFor=\"password\" className=\"form-label\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  type=\"password\" id=\"password\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"********\"\r\n                  name=\"password\"\r\n                  minLength={8}\r\n                  required\r\n                  onChange={handleInputChange}\r\n                />\r\n                <div className=\"checkBox\">\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    value=\"\"\r\n                    id=\"flexCheckDefault\"\r\n                  />\r\n                  <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">\r\n                    Remember me\r\n                  </label>\r\n                </div>\r\n                \r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={submitLoginForm}>\r\n                  Login\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <NotificationContainer/>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}